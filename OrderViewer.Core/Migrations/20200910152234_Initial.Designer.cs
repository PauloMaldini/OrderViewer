// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderViewer.Core.Contexts;

namespace OrderViewer.Core.Migrations
{
    [DbContext(typeof(OrderViewerContext))]
    [Migration("20200910152234_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("OrderViewer.Core.Entities.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("BLOB");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Deleted = false,
                            OrderStatus = 2,
                            Timestamp = new DateTime(2020, 3, 15, 10, 34, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            Deleted = false,
                            OrderStatus = 2,
                            Timestamp = new DateTime(2020, 6, 24, 20, 1, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            Deleted = false,
                            OrderStatus = 2,
                            Timestamp = new DateTime(2020, 8, 27, 14, 59, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            Deleted = false,
                            OrderStatus = 1,
                            Timestamp = new DateTime(2020, 9, 7, 11, 14, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5L,
                            Deleted = false,
                            OrderStatus = 1,
                            Timestamp = new DateTime(2020, 9, 8, 21, 33, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("OrderViewer.Core.Entities.OrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<long>("OrderRefId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ProductRefId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.HasIndex("OrderRefId");

                    b.HasIndex("ProductRefId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Deleted = false,
                            OrderRefId = 1L,
                            ProductRefId = 1L,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2L,
                            Deleted = false,
                            OrderRefId = 1L,
                            ProductRefId = 3L,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 3L,
                            Deleted = false,
                            OrderRefId = 1L,
                            ProductRefId = 10L,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4L,
                            Deleted = false,
                            OrderRefId = 1L,
                            ProductRefId = 7L,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 5L,
                            Deleted = false,
                            OrderRefId = 2L,
                            ProductRefId = 2L,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 6L,
                            Deleted = false,
                            OrderRefId = 2L,
                            ProductRefId = 8L,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 7L,
                            Deleted = false,
                            OrderRefId = 2L,
                            ProductRefId = 6L,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 8L,
                            Deleted = false,
                            OrderRefId = 2L,
                            ProductRefId = 3L,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 9L,
                            Deleted = false,
                            OrderRefId = 2L,
                            ProductRefId = 7L,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 10L,
                            Deleted = false,
                            OrderRefId = 3L,
                            ProductRefId = 1L,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 11L,
                            Deleted = false,
                            OrderRefId = 3L,
                            ProductRefId = 10L,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 12L,
                            Deleted = false,
                            OrderRefId = 3L,
                            ProductRefId = 9L,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 13L,
                            Deleted = false,
                            OrderRefId = 4L,
                            ProductRefId = 3L,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 14L,
                            Deleted = false,
                            OrderRefId = 4L,
                            ProductRefId = 6L,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 15L,
                            Deleted = false,
                            OrderRefId = 4L,
                            ProductRefId = 7L,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 16L,
                            Deleted = false,
                            OrderRefId = 4L,
                            ProductRefId = 9L,
                            Quantity = 6
                        },
                        new
                        {
                            Id = 17L,
                            Deleted = false,
                            OrderRefId = 4L,
                            ProductRefId = 1L,
                            Quantity = 9
                        },
                        new
                        {
                            Id = 18L,
                            Deleted = false,
                            OrderRefId = 4L,
                            ProductRefId = 10L,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 19L,
                            Deleted = false,
                            OrderRefId = 5L,
                            ProductRefId = 1L,
                            Quantity = 5
                        });
                });

            modelBuilder.Entity("OrderViewer.Core.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Code = "1",
                            Deleted = false,
                            Description = "",
                            Name = "Laptop",
                            Price = 1300.0
                        },
                        new
                        {
                            Id = 2L,
                            Code = "2",
                            Deleted = false,
                            Description = "",
                            Name = "Web camera",
                            Price = 53.0
                        },
                        new
                        {
                            Id = 3L,
                            Code = "3",
                            Deleted = false,
                            Description = "",
                            Name = "Router",
                            Price = 120.0
                        },
                        new
                        {
                            Id = 4L,
                            Code = "4",
                            Deleted = false,
                            Description = "",
                            Name = "Commutator",
                            Price = 5500.0
                        },
                        new
                        {
                            Id = 5L,
                            Code = "5",
                            Deleted = false,
                            Description = "",
                            Name = "Printer",
                            Price = 217.0
                        },
                        new
                        {
                            Id = 6L,
                            Code = "6",
                            Deleted = false,
                            Description = "",
                            Name = "Display",
                            Price = 528.0
                        },
                        new
                        {
                            Id = 7L,
                            Code = "7",
                            Deleted = false,
                            Description = "",
                            Name = "Phone",
                            Price = 790.0
                        },
                        new
                        {
                            Id = 8L,
                            Code = "8",
                            Deleted = false,
                            Description = "",
                            Name = "Headphones",
                            Price = 34.0
                        },
                        new
                        {
                            Id = 9L,
                            Code = "9",
                            Deleted = false,
                            Description = "",
                            Name = "SSD",
                            Price = 115.0
                        },
                        new
                        {
                            Id = 10L,
                            Code = "10",
                            Deleted = false,
                            Description = "",
                            Name = "RAM",
                            Price = 91.0
                        });
                });

            modelBuilder.Entity("OrderViewer.Core.Entities.OrderItem", b =>
                {
                    b.HasOne("OrderViewer.Core.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderViewer.Core.Entities.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
